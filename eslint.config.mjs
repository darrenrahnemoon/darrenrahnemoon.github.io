// @ts-check

import eslint          from '@eslint/js';
import pluginVue       from 'eslint-plugin-vue';
import vueEslintParser from 'vue-eslint-parser';
import tseslint        from 'typescript-eslint';
import globals         from 'globals';
import alignImport     from 'eslint-plugin-align-import';
import stylistic       from '@stylistic/eslint-plugin';

export default tseslint.config(
	{
		ignores: [ '**/build', '**/node_modules' ],
	},
	{
		extends: [
			eslint.configs.recommended,
			...tseslint.configs.recommended,
			...pluginVue.configs['flat/recommended'],
		],
		plugins: {
			'align-import'      : alignImport,
			'@typescript-eslint': tseslint.plugin,
			'@stylistic'        : stylistic,
		},
		files          : [ '**/*.{d.ts,ts,vue,js,mjs,cjs}', '*.{d.ts,ts,vue,js,mjs,cjs}' ],
		languageOptions: {
			parser       : vueEslintParser,
			globals      : globals.browser,
			ecmaVersion  : 'latest',
			sourceType   : 'module',
			parserOptions: {
				parser             : tseslint.parser,
				projectService     : true,
				tsconfigRootDir    : import.meta.dirname,
				extraFileExtensions: [ '.vue' ],
			},
		},
		rules: {
			// Typescript/Javascript Syntax Standards
			'no-cond-assign'          : 'error',
			'no-constant-condition'   : 'error',
			'no-debugger'             : 'error',
			'no-dupe-args'            : 'error',
			'no-dupe-keys'            : 'error',
			'no-duplicate-case'       : 'error',
			'no-empty-character-class': 'error',
			'no-extra-boolean-cast'   : 'error',
			'no-func-assign'          : 'error',
			'no-inner-declarations'   : 'error',
			'no-invalid-regexp'       : 'error',
			'no-irregular-whitespace' : 'error',
			'no-obj-calls'            : 'error',
			'valid-typeof'            : 'error',
			'no-eval'                 : 'error',
			'no-else-return'          : [ 'error', { allowElseIf: false } ],
			'no-loop-func'            : 'error',
			'no-implied-eval'         : 'error',
			'no-prototype-builtins'   : 'off',
			'arrow-body-style'        : [ 'error' ],
			'block-spacing'           : [ 'error' ],
			'brace-style'             : [ 'error', 'stroustrup' ],
			'no-nested-ternary'       : [ 'error' ],
			'no-mixed-spaces-and-tabs': [ 'error', 'smart-tabs' ],
			'no-unsafe-negation'      : [ 'error' ],
			'func-style'              : [ 'error', 'declaration', { allowArrowFunctions: true } ],
			'dot-location'            : [ 'error', 'property' ],
			'dot-notation'            : [ 'error', { allowPattern: '^[A-Za-z]+(_[A-Za-z0-9]+)+$' } ],
			'no-undef-init'           : [ 'error' ],
			'no-lonely-if'            : [ 'error' ],
			'no-implicit-coercion'    : [ 'error', { allow: [ '!!' ] } ],
			'no-extra-bind'           : [ 'error' ],
			'no-floating-decimal'     : [ 'error' ],
			'yoda'                    : [ 'error' ],
			'no-useless-rename'       : [ 'error' ],
			'no-var'                  : [ 'error' ],
			'prefer-const'            : [ 'error' ],
			'prefer-numeric-literals' : [ 'error' ],
			'prefer-template'         : [ 'error' ],
			'prefer-spread'           : [ 'error' ],
			'template-curly-spacing'  : [ 'error' ],
			'yield-star-spacing'     	: [ 'error' ],
			'no-return-await'         : [ 'error' ],
			'no-return-assign'        : [ 'error', 'always' ],
			'object-shorthand'        : [ 'error', 'properties' ],

			// Typescript Standards
			'@typescript-eslint/adjacent-overload-signatures'  : 'error',
			'@typescript-eslint/array-type'                    : 'error',
			'@typescript-eslint/explicit-function-return-type' : 'off',
			'@typescript-eslint/no-unsafe-function-type'       : 'off',
			'@typescript-eslint/explicit-member-accessibility' : 'off',
			'@typescript-eslint/explicit-module-boundary-types': 'off',
			'no-array-constructor'                            	: 'off',
			'@typescript-eslint/no-array-constructor'          : 'error',
			'@typescript-eslint/no-explicit-any'               : 'off',
			'@typescript-eslint/no-inferrable-types'           : [ 'error', {
				ignoreProperties: true,
			} ],
			'@typescript-eslint/no-misused-new'             : 'error',
			'@typescript-eslint/no-namespace'               : 'error',
			'@typescript-eslint/no-non-null-assertion'      : 'error',
			'@typescript-eslint/consistent-type-assertions' : 'error',
			'no-unused-vars'                               	: 'off',
			'@typescript-eslint/no-unused-vars'             : 'error',
			'@typescript-eslint/no-unused-expressions'      : 'off',
			'no-use-before-define'                          : 'off',
			'@typescript-eslint/no-use-before-define'       : [ 'off', { functions: false } ],
			'@typescript-eslint/consistent-type-definitions': [ 'error', 'interface' ],
			'@typescript-eslint/prefer-namespace-keyword'   : 'error',
			'@typescript-eslint/ban-ts-comment'             : [ 'error', { 'ts-ignore': 'allow-with-description' } ],
			'@typescript-eslint/no-floating-promises'       : [ 'error', {
				ignoreVoid: true,
				ignoreIIFE: true,
			} ],
			'@typescript-eslint/naming-convention': [ 'error', {
				selector: 'enumMember',
				format  : [ 'PascalCase' ],
			}, {
				selector          : 'variable',
				modifiers         : [ 'const' ],
				format            : [ 'camelCase', 'UPPER_CASE', 'PascalCase' ],
				leadingUnderscore : 'allow',
				trailingUnderscore: 'allow',
			}, {
				selector : 'function',
				modifiers: [ 'global', 'exported' ],
				format   : [ 'camelCase', 'PascalCase' ],
			}, {
				selector         : [ 'accessor', 'objectLiteralMethod' ],
				format           : [ 'camelCase', 'PascalCase' ],
				leadingUnderscore: 'allow',
			}, {
				selector: 'typeLike',
				format  : [ 'PascalCase' ],
			} ],
			'@typescript-eslint/no-this-alias': [ 'off' ],

			// Stylistic Standards
			'align-import/align-import'         : [ 'error' ],
			'@stylistic/object-property-newline': [ 'error', { allowMultiplePropertiesPerLine: true } ],
			'@stylistic/array-bracket-spacing'  : [ 'error', 'always', {
				objectsInArrays: true,
				arraysInArrays : true,
			} ],
			'@stylistic/comma-dangle': [ 'error', {
				objects  : 'always-multiline',
				arrays   : 'always-multiline',
				functions: 'never',
			} ],
			'@stylistic/comma-spacing'    : [ 'error' ],
			'@stylistic/comma-style'      : [ 'error' ],
			'@stylistic/curly-newline'    : [ 'error' ],
			'@stylistic/eol-last'         : [ 'error', 'always' ],
			'@stylistic/func-call-spacing': [ 'error' ],
			'@stylistic/key-spacing'      : [ 'error', {
				beforeColon: false,
				afterColon : true,
				align      : 'colon',
			} ],
			'@stylistic/keyword-spacing'        : [ 'error' ],
			'@stylistic/linebreak-style'        : [ 'error', 'unix' ],
			'@stylistic/new-parens'             : [ 'error' ],
			'@stylistic/no-multiple-empty-lines': [ 'error', {
				max   : 2,
				maxEOF: 1,
				maxBOF: 0,
			} ],
			'@stylistic/no-trailing-spaces'           : [ 'error' ],
			'@stylistic/no-whitespace-before-property': [ 'error' ],
			'@stylistic/object-curly-spacing'         : [ 'error', 'always' ],
			'@stylistic/operator-linebreak'           : [ 'error', 'before' ],
			'@stylistic/quotes'                       : [ 'error', 'single', { avoidEscape: true } ],
			'@stylistic/semi'                         : [ 'error', 'always' ],
			'@stylistic/computed-property-spacing'    : [ 'error', 'never' ],
			'@stylistic/semi-spacing'                 : [ 'error' ],
			'@stylistic/space-before-blocks'          : [ 'error' ],
			'@stylistic/space-before-function-paren'  : [ 'error', {
				anonymous : 'never',
				named     : 'never',
				asyncArrow: 'always',
			} ],
			'@stylistic/space-in-parens': [ 'error', 'never' ],
			'@stylistic/space-infix-ops': [ 'error' ],
			'@stylistic/space-unary-ops': [ 'error', {
				words   : true,
				nonwords: false,
			} ],
			'@stylistic/spaced-comment': [ 'error', 'always', {
				markers: [ '/' ],
			} ],
			'@stylistic/arrow-parens'          : [ 'error', 'as-needed' ],
			'@stylistic/arrow-spacing'         : [ 'error' ],
			'@stylistic/generator-star-spacing': [ 'error', 'neither' ],
			'@stylistic/indent'                : [ 'error', 'tab' ],

			// Vue Standards
			'vue/no-mutating-props'        : 'off',
			'vue/html-indent'              : [ 'error', 'tab' ],
			'vue-scoped-css/require-scoped': 'off',
			'vue/array-bracket-spacing'    : [
				'error',
				'always',
				{ objectsInArrays: true, arraysInArrays: true },
			],
			'vue/arrow-spacing': [ 'error' ],
			'vue/block-spacing': [ 'error' ],
			'vue/brace-style'  : [ 'error', 'stroustrup' ],
			'vue/camelcase'    : [ 'error' ],
			'vue/comma-dangle' : [
				'error',
				{ objects: 'always-multiline', arrays: 'always-multiline', functions: 'never' },
			],
			'vue/dot-location': [ 'error', 'property' ],
			'vue/key-spacing' : [
				'error',
				{
					beforeColon: true,
					afterColon : true,
					align      : 'colon',
				},
			],
			'vue/keyword-spacing'            : [ 'error' ],
			'vue/no-irregular-whitespace'    : [ 'error' ],
			'vue/object-curly-spacing'       : [ 'error', 'always' ],
			'vue/space-infix-ops'            : [ 'error' ],
			'vue/space-unary-ops'            : [ 'error', { words: true, nonwords: false } ],
			'vue/max-attributes-per-line'    : [ 'error', { singleline: 3 } ],
			'vue/padding-line-between-blocks': [ 'error' ],
			'vue/no-multiple-template-root'  : 'off',
			'vue/multi-word-component-names' : 'off',
		},
	}
);
